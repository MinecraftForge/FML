--- ../src-base/minecraft/net/minecraft/src/WorldType.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src-work/minecraft/net/minecraft/src/WorldType.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,5 +1,9 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
 public class WorldType
 {
     public static final WorldType[] field_48637_a = new WorldType[16];
@@ -11,6 +15,8 @@
     private boolean field_48633_g;
     private boolean field_48638_h;
 
+    private BiomeGenBase[] biomesForWorldType;
+
     private WorldType(int p_i1080_1_, String p_i1080_2_)
     {
         this(p_i1080_1_, p_i1080_2_, 0);
@@ -22,6 +28,13 @@
         this.field_48632_f = p_i1081_3_;
         this.field_48633_g = true;
         field_48637_a[p_i1081_1_] = this;
+        switch (p_i1081_1_) {
+            case 8:
+                biomesForWorldType = new BiomeGenBase[] {BiomeGenBase.field_4249_h, BiomeGenBase.field_4253_d, BiomeGenBase.field_35483_e, BiomeGenBase.field_4255_b, BiomeGenBase.field_35485_c, BiomeGenBase.field_4250_g};
+                break;
+            default:
+                biomesForWorldType = new BiomeGenBase[] {BiomeGenBase.field_4249_h, BiomeGenBase.field_4253_d, BiomeGenBase.field_35483_e, BiomeGenBase.field_4255_b, BiomeGenBase.field_35485_c, BiomeGenBase.field_4250_g, BiomeGenBase.field_48416_w};
+        }
     }
 
     public String func_48628_a()
@@ -78,4 +91,52 @@
 
         return null;
     }
+
+    public WorldChunkManager getChunkManager(World var1)
+    {
+        return this == field_48636_c ? new WorldChunkManagerHell(BiomeGenBase.field_35485_c, 0.5F, 0.5F) : new WorldChunkManager(var1);
+    }
+
+    public IChunkProvider getChunkGenerator(World var1)
+    {
+        return this == field_48636_c ? new ChunkProviderFlat(var1, var1.func_22138_q(), var1.func_22144_v().func_35917_r()) : new ChunkProviderGenerate(var1, var1.func_22138_q(), var1.func_22144_v().func_35917_r());
+    }
+
+    public int getSeaLevel(World var1)
+    {
+        return this == field_48636_c ? 4 : 64;
+    }
+
+    public boolean hasVoidParticles(boolean var1)
+    {
+        return this != field_48636_c && !var1;
+    }
+
+    public double voidFadeMagnitude()
+    {
+        return this == field_48636_c ? 1.0D : 0.03125D;
+    }
+
+    public BiomeGenBase[] getBiomesForWorldType() {
+        return biomesForWorldType;
+    }
+    
+	public void addNewBiome(BiomeGenBase biome) {
+		List<BiomeGenBase> newBiomesForWorld = new ArrayList<BiomeGenBase>();
+		newBiomesForWorld.addAll(Arrays.asList(biomesForWorldType));
+		
+		if (!newBiomesForWorld.contains(biome))
+			newBiomesForWorld.add(biome);
+		biomesForWorldType = newBiomesForWorld.toArray(new BiomeGenBase[0]);
+	}
+    
+    public void removeBiome(BiomeGenBase biome) {
+		List<BiomeGenBase> newBiomesForWorld = new ArrayList<BiomeGenBase>();
+		newBiomesForWorld.addAll(Arrays.asList(biomesForWorldType));
+		
+		newBiomesForWorld.remove(biome);
+		biomesForWorldType = newBiomesForWorld.toArray(new BiomeGenBase[0]);
+    }
+    
+    
 }
